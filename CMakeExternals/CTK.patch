From c76af6a4ac6da8a83d15018561d67fa8458013a9 Mon Sep 17 00:00:00 2001
From: Rostislav Khlebnikov <r.khlebnikov@gmail.com>
Date: Tue, 21 Jul 2015 16:36:03 +0100
Subject: [PATCH] DEBUG variable renamed to DEBUG_FLAG

Signed-off-by: Rostislav Khlebnikov <r.khlebnikov@gmail.com>
---
 Libs/PluginFramework/ctkPluginAbstractTracked.tpp  | 24 +++++++++++-----------
 Libs/PluginFramework/ctkPluginAbstractTracked_p.h  |  2 +-
 Libs/PluginFramework/ctkPluginTracker.tpp          |  4 ++--
 Libs/PluginFramework/ctkPluginTracker_p.h          |  2 +-
 Libs/PluginFramework/ctkPluginTracker_p.tpp        |  2 +-
 Libs/PluginFramework/ctkServiceTracker.tpp         | 14 ++++++-------
 Libs/PluginFramework/ctkServiceTracker_p.h         |  2 +-
 Libs/PluginFramework/ctkServiceTracker_p.tpp       |  4 ++--
 Libs/PluginFramework/ctkTrackedPlugin.tpp          |  2 +-
 Libs/PluginFramework/ctkTrackedService.tpp         |  2 +-
 .../service/debug/ctkDebugOptionsListener.h        |  6 +++---
 11 files changed, 32 insertions(+), 32 deletions(-)

diff --git a/Libs/PluginFramework/ctkPluginAbstractTracked.tpp b/Libs/PluginFramework/ctkPluginAbstractTracked.tpp
index b661206..c3755a5 100644
--- a/Libs/PluginFramework/ctkPluginAbstractTracked.tpp
+++ b/Libs/PluginFramework/ctkPluginAbstractTracked.tpp
@@ -26,7 +26,7 @@
 
 //----------------------------------------------------------------------------
 template<class S, class T, class R>
-const bool ctkPluginAbstractTracked<S,T,R>::DEBUG = false;
+const bool ctkPluginAbstractTracked<S,T,R>::DEBUG_FLAG = false;
 
 //----------------------------------------------------------------------------
 template<class S, class T, class R>
@@ -62,7 +62,7 @@ void ctkPluginAbstractTracked<S,T,R>::setInitial(const QList<S>& list)
 {
   foreach (S item, list)
   {
-    if (DEBUG)
+    if (DEBUG_FLAG)
     {
       qDebug() << "ctkPluginAbstractTracked::setInitial:" << item;
     }
@@ -94,7 +94,7 @@ void ctkPluginAbstractTracked<S,T,R>::trackInitial()
       if (tracked.value(item))
       {
         /* if we are already tracking this item */
-        if (DEBUG)
+        if (DEBUG_FLAG)
         {
           qDebug() << "ctkPluginAbstractTracked::trackInitial[already tracked]: " << item;
         }
@@ -105,7 +105,7 @@ void ctkPluginAbstractTracked<S,T,R>::trackInitial()
         /*
          * if this item is already in the process of being added.
          */
-        if (DEBUG)
+        if (DEBUG_FLAG)
         {
           qDebug() << "ctkPluginAbstractTracked::trackInitial[already adding]: " << item;
         }
@@ -113,7 +113,7 @@ void ctkPluginAbstractTracked<S,T,R>::trackInitial()
       }
       adding.push_back(item);
     }
-    if (DEBUG)
+    if (DEBUG_FLAG)
     {
       qDebug() << "ctkPluginAbstractTracked::trackInitial: " << item;
     }
@@ -150,7 +150,7 @@ void ctkPluginAbstractTracked<S,T,R>::track(S item, R related)
       if (adding.contains(item))
       {
         /* if this item is already in the process of being added. */
-        if (DEBUG)
+        if (DEBUG_FLAG)
         {
           qDebug() << "ctkPluginAbstractTracked::track[already adding]: " << item;
         }
@@ -160,7 +160,7 @@ void ctkPluginAbstractTracked<S,T,R>::track(S item, R related)
     }
     else
     { /* we are currently tracking this item */
-      if (DEBUG)
+      if (DEBUG_FLAG)
       {
         qDebug() << "ctkPluginAbstractTracked::track[modified]: " << item;
       }
@@ -194,7 +194,7 @@ void ctkPluginAbstractTracked<S,T,R>::untrack(S item, R related)
     { /* if this item is already in the list
        * of initial references to process
        */
-      if (DEBUG)
+      if (DEBUG_FLAG)
       {
         qDebug() << "ctkPluginAbstractTracked::untrack[removed from initial]: " << item;
       }
@@ -207,7 +207,7 @@ void ctkPluginAbstractTracked<S,T,R>::untrack(S item, R related)
     { /* if the item is in the process of
        * being added
        */
-      if (DEBUG)
+      if (DEBUG_FLAG)
       {
         qDebug() << "ctkPluginAbstractTracked::untrack[being added]: " << item;
       }
@@ -226,7 +226,7 @@ void ctkPluginAbstractTracked<S,T,R>::untrack(S item, R related)
     }
     modified(); /* increment modification count */
   }
-  if (DEBUG)
+  if (DEBUG_FLAG)
   {
     qDebug() << "ctkPluginAbstractTracked::untrack[removed]: " << item;
   }
@@ -326,7 +326,7 @@ bool ctkPluginAbstractTracked<S,T,R>::customizerAddingFinal(S item, const T& cus
 template<class S, class T, class R>
 void ctkPluginAbstractTracked<S,T,R>::trackAdding(S item, R related)
 {
-  if (DEBUG)
+  if (DEBUG_FLAG)
   {
     qDebug() << "ctkPluginAbstractTracked::trackAdding:" << item;
   }
@@ -353,7 +353,7 @@ void ctkPluginAbstractTracked<S,T,R>::trackAdding(S item, R related)
    */
   if (becameUntracked && object)
   {
-    if (DEBUG)
+    if (DEBUG_FLAG)
     {
       qDebug() << "ctkPluginAbstractTracked::trackAdding[removed]: " << item;
     }
diff --git a/Libs/PluginFramework/ctkPluginAbstractTracked_p.h b/Libs/PluginFramework/ctkPluginAbstractTracked_p.h
index 5423c62..d04bf01 100644
--- a/Libs/PluginFramework/ctkPluginAbstractTracked_p.h
+++ b/Libs/PluginFramework/ctkPluginAbstractTracked_p.h
@@ -51,7 +51,7 @@ class ctkPluginAbstractTracked : public QMutex
 public:
 
   /* set this to true to compile in debug messages */
-  static const bool DEBUG; // = false;
+  static const bool DEBUG_FLAG; // = false;
 
   /**
    * ctkPluginAbstractTracked constructor.
diff --git a/Libs/PluginFramework/ctkPluginTracker.tpp b/Libs/PluginFramework/ctkPluginTracker.tpp
index 26c53a1..7f0df24 100644
--- a/Libs/PluginFramework/ctkPluginTracker.tpp
+++ b/Libs/PluginFramework/ctkPluginTracker.tpp
@@ -55,7 +55,7 @@ void ctkPluginTracker<T>::open()
       return;
     }
 
-    if (d->DEBUG)
+    if (d->DEBUG_FLAG)
     {
       qDebug() << "ctkPluginTracker<T>::open";
     }
@@ -100,7 +100,7 @@ void ctkPluginTracker<T>::close()
       return;
     }
 
-    if (d->DEBUG)
+    if (d->DEBUG_FLAG)
     {
       qDebug() << "ctkPluginTracker<T>::close";
     }
diff --git a/Libs/PluginFramework/ctkPluginTracker_p.h b/Libs/PluginFramework/ctkPluginTracker_p.h
index 44a092d..e12af36 100644
--- a/Libs/PluginFramework/ctkPluginTracker_p.h
+++ b/Libs/PluginFramework/ctkPluginTracker_p.h
@@ -51,7 +51,7 @@ public:
   QSharedPointer<ctkTrackedPlugin<T> > tracked() const;
 
   /* set this to true to compile in debug messages */
-  static const bool DEBUG; //	= false;
+  static const bool DEBUG_FLAG; //	= false;
 
   /**
    * The Bundle Context used by this <code>ctkPluginTracker</code>.
diff --git a/Libs/PluginFramework/ctkPluginTracker_p.tpp b/Libs/PluginFramework/ctkPluginTracker_p.tpp
index 8f096f8..dbdf238 100644
--- a/Libs/PluginFramework/ctkPluginTracker_p.tpp
+++ b/Libs/PluginFramework/ctkPluginTracker_p.tpp
@@ -24,7 +24,7 @@
 
 //----------------------------------------------------------------------------
 template<class T>
-const bool ctkPluginTrackerPrivate<T>::DEBUG = false;
+const bool ctkPluginTrackerPrivate<T>::DEBUG_FLAG = false;
 
 //----------------------------------------------------------------------------
 template<class T>
diff --git a/Libs/PluginFramework/ctkServiceTracker.tpp b/Libs/PluginFramework/ctkServiceTracker.tpp
index 2a243ac..381919f 100644
--- a/Libs/PluginFramework/ctkServiceTracker.tpp
+++ b/Libs/PluginFramework/ctkServiceTracker.tpp
@@ -85,7 +85,7 @@ void ctkServiceTracker<S,T>::open()
       return;
     }
 
-    if (d->DEBUG)
+    if (d->DEBUG_FLAG)
     {
       qDebug() << "ctkServiceTracker<S,T>::open: " << d->filter;
     }
@@ -141,7 +141,7 @@ void ctkServiceTracker<S,T>::close()
     {
       return;
     }
-    if (d->DEBUG)
+    if (d->DEBUG_FLAG)
     {
       qDebug() << "ctkServiceTracker<S,T>::close:" << d->filter;
     }
@@ -167,7 +167,7 @@ void ctkServiceTracker<S,T>::close()
     outgoing->untrack(ref, ctkServiceEvent());
   }
 
-  if (d->DEBUG)
+  if (d->DEBUG_FLAG)
   {
     QMutexLocker lock(&d->mutex);
     if ((d->cachedReference.getPlugin().isNull()) && (d->cachedService == 0))
@@ -235,14 +235,14 @@ ctkServiceReference ctkServiceTracker<S,T>::getServiceReference() const
   }
   if (!reference.getPlugin().isNull())
   {
-    if (d->DEBUG)
+    if (d->DEBUG_FLAG)
     {
       qDebug() << "ctkServiceTracker<S,T>::getServiceReference[cached]:"
                    << d->filter;
     }
     return reference;
   }
-  if (d->DEBUG)
+  if (d->DEBUG_FLAG)
   {
     qDebug() << "ctkServiceTracker<S,T>::getServiceReference:" << d->filter;
   }
@@ -351,14 +351,14 @@ T ctkServiceTracker<S,T>::getService() const
   T service = d->cachedService;
   if (service != 0)
   {
-    if (d->DEBUG)
+    if (d->DEBUG_FLAG)
     {
       qDebug() << "ctkServiceTracker<S,T>::getService[cached]:"
                << d->filter;
     }
     return service;
   }
-  if (d->DEBUG)
+  if (d->DEBUG_FLAG)
   {
     qDebug() << "ctkServiceTracker<S,T>::getService:" << d->filter;
   }
diff --git a/Libs/PluginFramework/ctkServiceTracker_p.h b/Libs/PluginFramework/ctkServiceTracker_p.h
index 8a3751c..7d457e0 100644
--- a/Libs/PluginFramework/ctkServiceTracker_p.h
+++ b/Libs/PluginFramework/ctkServiceTracker_p.h
@@ -72,7 +72,7 @@ public:
   QList<ctkServiceReference> getServiceReferences_unlocked(ctkTrackedService<S,T>* t) const;
 
   /* set this to true to compile in debug messages */
-  static const bool	DEBUG; //	= false;
+  static const bool	DEBUG_FLAG; //	= false;
 
   /**
    * The Plugin Context used by this <code>ctkServiceTracker</code>.
diff --git a/Libs/PluginFramework/ctkServiceTracker_p.tpp b/Libs/PluginFramework/ctkServiceTracker_p.tpp
index b548bb4..479bd1a 100644
--- a/Libs/PluginFramework/ctkServiceTracker_p.tpp
+++ b/Libs/PluginFramework/ctkServiceTracker_p.tpp
@@ -28,7 +28,7 @@
 
 //----------------------------------------------------------------------------
 template<class S, class T>
-const bool ctkServiceTrackerPrivate<S,T>::DEBUG = false;
+const bool ctkServiceTrackerPrivate<S,T>::DEBUG_FLAG = false;
 
 //----------------------------------------------------------------------------
 template<class S, class T>
@@ -142,7 +142,7 @@ void ctkServiceTrackerPrivate<S,T>::modified()
 {
   cachedReference = 0; /* clear cached value */
   cachedService = 0; /* clear cached value */
-  if (DEBUG)
+  if (DEBUG_FLAG)
   {
     qDebug() << "ctkServiceTracker::modified:" << filter;
   }
diff --git a/Libs/PluginFramework/ctkTrackedPlugin.tpp b/Libs/PluginFramework/ctkTrackedPlugin.tpp
index 91eb1bd..bfe3b99 100644
--- a/Libs/PluginFramework/ctkTrackedPlugin.tpp
+++ b/Libs/PluginFramework/ctkTrackedPlugin.tpp
@@ -43,7 +43,7 @@ void ctkTrackedPlugin<T>::pluginChanged(const ctkPluginEvent& event)
 
   QSharedPointer<ctkPlugin> plugin = event.getPlugin();
   ctkPlugin::State state = plugin->getState();
-  if (pluginTracker->d_func()->DEBUG)
+  if (pluginTracker->d_func()->DEBUG_FLAG)
   {
     qDebug() << "ctkTrackedPlugin<T>::pluginChanged[" << state << "]: " << *plugin;
   }
diff --git a/Libs/PluginFramework/ctkTrackedService.tpp b/Libs/PluginFramework/ctkTrackedService.tpp
index 7c66371..638060a 100644
--- a/Libs/PluginFramework/ctkTrackedService.tpp
+++ b/Libs/PluginFramework/ctkTrackedService.tpp
@@ -44,7 +44,7 @@ void ctkTrackedService<S,T>::serviceChanged(const ctkServiceEvent& event)
   }
 
   ctkServiceReference reference = event.getServiceReference();
-  if (serviceTracker->d_func()->DEBUG)
+  if (serviceTracker->d_func()->DEBUG_FLAG)
   {
     qDebug() << "ctkTrackedService::serviceChanged["
         << event.getType() << "]: " << reference;
diff --git a/Libs/PluginFramework/service/debug/ctkDebugOptionsListener.h b/Libs/PluginFramework/service/debug/ctkDebugOptionsListener.h
index c599642..9cd3454 100644
--- a/Libs/PluginFramework/service/debug/ctkDebugOptionsListener.h
+++ b/Libs/PluginFramework/service/debug/ctkDebugOptionsListener.h
@@ -42,7 +42,7 @@ struct ctkDebugOptions;
  * <pre>
  * class Activator : ctkPluginActivator, ctkDebugOptionsListener
  * {
- *   static bool DEBUG = false;
+ *   static bool DEBUG_FLAG = false;
  *
  *   void start(ctkPluginContext* context)
  *   {
@@ -53,12 +53,12 @@ struct ctkDebugOptions;
  *
  *   void optionsChanged(const ctkDebugOptions& options)
  *   {
- *     DEBUG = options->getBooleanOption("com.mycompany.mybundle/debug", false);
+ *     DEBUG_FLAG = options->getBooleanOption("com.mycompany.mybundle/debug", false);
  *   }
  *
  *   void doSomeWork()
  *   {
- *     if (DEBUG) BERRY_INFO << "foo";
+ *     if (DEBUG_FLAG) BERRY_INFO << "foo";
  *   }
  *   ...
  * }
diff --git a/CMakeExternals/PythonQt.cmake b/CMakeExternals/PythonQt.cmake
index 81764e8..c07722e 100644
--- a/CMakeExternals/PythonQt.cmake
+++ b/CMakeExternals/PythonQt.cmake
@@ -32,23 +32,16 @@ if(NOT DEFINED PYTHONQT_INSTALL_DIR)
   endif()
 
   # Enable Qt libraries PythonQt wrapping if required
-  if (CTK_QT_VERSION VERSION_GREATER "4")
-    set(qtlibs Core Gui Widgets Network OpenGL PrintSupport Sql Svg UiTools WebKit WebKitWidgets Xml)
-  else()
+  if (CTK_QT_VERSION VERSION_LESS "5")
     list(APPEND ep_PythonQt_args
       -DQT_QMAKE_EXECUTABLE:FILEPATH=${QT_QMAKE_EXECUTABLE}
       )
-    set(qtlibs core gui network opengl sql svg uitools webkit xml)
   endif()
+  set(qtlibs Core Gui Multimedia Network OpenGL Sql Svg UiTools WebKit Xml XmlPatterns)
 
   # Set desired qt version for PythonQt
   list(APPEND ep_PythonQt_args -DPythonQt_QT_VERSION:STRING=${CTK_QT_VERSION})
 
-  foreach(qtlib All ${qtlibs})
-    string(TOUPPER ${qtlib} qtlib_uppercase)
-    list(APPEND ep_PythonQt_args -DPythonQt_Wrap_Qt${qtlib}:BOOL=${CTK_LIB_Scripting/Python/Core_PYTHONQT_WRAP_QT${qtlib_uppercase}})
-  endforeach()
-
   # Force wrap option to ON if WRAP_QTALL was set to ON
   if(${CTK_LIB_Scripting/Python/Core_PYTHONQT_WRAP_QTALL})
     foreach(qtlib ${qtlibs})
@@ -57,6 +50,11 @@ if(NOT DEFINED PYTHONQT_INSTALL_DIR)
     endforeach()
   endif()
 
+  foreach(qtlib All ${qtlibs})
+    string(TOUPPER ${qtlib} qtlib_uppercase)
+    list(APPEND ep_PythonQt_args -DPythonQt_Wrap_Qt${qtlib}:BOOL=${CTK_LIB_Scripting/Python/Core_PYTHONQT_WRAP_QT${qtlib_uppercase}})
+  endforeach()
+
   # Python is required
   find_package(PythonLibs)
   if(NOT PYTHONLIBS_FOUND)
@@ -92,6 +90,7 @@ if(NOT DEFINED PYTHONQT_INSTALL_DIR)
       -DPYTHON_INCLUDE_DIR:PATH=${PYTHON_INCLUDE_DIR}
       -DPYTHON_INCLUDE_DIR2:PATH=${PYTHON_INCLUDE_DIR2}
       -DPYTHON_LIBRARY:FILEPATH=${PYTHON_LIBRARY}
+      -DCMAKE_DEBUG_POSTFIX:STRING=${PYTHONQT_DEBUG_POSTFIX}
       ${ep_PythonQt_args}
     DEPENDS
       ${${proj}_DEPENDENCIES}
@@ -111,6 +110,7 @@ mark_as_superbuild(
     PYTHON_INCLUDE_DIR:PATH # FindPythonQt expects PYTHON_INCLUDE_DIR variable to be defined
     PYTHON_INCLUDE_DIR2:PATH
     PYTHON_LIBRARY:FILEPATH # FindPythonQt expects PYTHON_LIBRARY variable to be defined
+    PYTHONQT_DEBUG_POSTFIX:STRING
   LABELS "FIND_PACKAGE_VARS"
   )
 mark_as_superbuild(
diff --git a/Utilities/CMake/FindPythonQt.cmake b/Utilities/CMake/FindPythonQt.cmake
index 5e61d97..1d3fc28 100644
--- a/Utilities/CMake/FindPythonQt.cmake
+++ b/Utilities/CMake/FindPythonQt.cmake
@@ -22,7 +22,7 @@ find_path(PYTHONQT_INCLUDE_DIR PythonQt.h
         "${PYTHONQT_INSTALL_DIR}/src"
   DOC "Path to the PythonQt include directory")
 find_library(PYTHONQT_LIBRARY_RELEASE PythonQt PATHS "${PYTHONQT_INSTALL_DIR}/lib" DOC "The PythonQt library.")
-find_library(PYTHONQT_LIBRARY_DEBUG NAMES PythonQt${CTK_CMAKE_DEBUG_POSTFIX} PythonQt${CMAKE_DEBUG_POSTFIX} PythonQt PATHS "${PYTHONQT_INSTALL_DIR}/lib" DOC "The PythonQt library.")
+find_library(PYTHONQT_LIBRARY_DEBUG NAMES PythonQt${CTK_CMAKE_DEBUG_POSTFIX} PythonQt${CMAKE_DEBUG_POSTFIX} PythonQt${PYTHONQT_DEBUG_POSTFIX} PythonQt PATHS "${PYTHONQT_INSTALL_DIR}/lib" DOC "The PythonQt library.")
 set(PYTHONQT_LIBRARY)
 if(PYTHONQT_LIBRARY_RELEASE)
   list(APPEND PYTHONQT_LIBRARY optimized ${PYTHONQT_LIBRARY_RELEASE})
diff --git a/Libs/Scripting/Python/Core/ctkAbstractPythonManager.cpp b/Libs/Scripting/Python/Core/ctkAbstractPythonManager.cpp
index 66f5240..547f5e6 100644
--- a/Libs/Scripting/Python/Core/ctkAbstractPythonManager.cpp
+++ b/Libs/Scripting/Python/Core/ctkAbstractPythonManager.cpp
@@ -28,10 +28,7 @@
 
 // PythonQT includes
 #include <PythonQt.h>
-
-#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
-  #include <PythonQt_QtBindings.h>
-#endif
+#include <PythonQt_QtBindings.h>
 
 // STD includes
 #include <csignal>
@@ -155,9 +152,7 @@ void ctkAbstractPythonManager::initPythonQt(int flags)
   this->connect(PythonQt::self(), SIGNAL(pythonStdErr(QString)),
                 SLOT(printStderr(QString)));
 
-#if QT_VERSION < QT_VERSION_CHECK(5, 0, 0)
   PythonQt_init_QtBindings();
-#endif
 
   QStringList initCode;
 
-- 
1.8.4.msysgit.0

